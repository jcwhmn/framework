buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url "https://repo.spring.io/plugins-release" }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
    classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
    classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
    //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
  }
}


plugins {
  id "java"
  id "maven"
  id "idea"
  id "jacoco"
  id "net.ltgt.apt-eclipse" version "0.21"
  id "net.ltgt.apt-idea" version "0.21"
  id "net.ltgt.apt" version "0.21"
  id "org.sonarqube" version "2.7"
  id 'maven-publish'
}

sourceCompatibility=1.8
targetCompatibility=1.8
assert System.properties['java.specification.version'] == '1.8'

eclipse {
  sourceSets {
    main {
      java {
        srcDirs += ["build/generated/source/apt/main"]
      }
    }
  }
}

group = 'com.yangzhou'
version = "${frame_version}"
description = ''

jar {
  baseName = "${rootProject.name}"
  version = "${frame_version}"
}

task testReport(type: TestReport) {
  destinationDir = file("$buildDir/reports/tests")
  reportOn test
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

configurations {
  providedRuntime
  implementation.exclude module: "spring-boot-starter-tomcat"
  all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
  implementation platform("io.github.jhipster:jhipster-dependencies:${jhipster_dependencies_version}" )


  implementation group: "io.github.jhipster", name: "jhipster-framework"
  implementation "org.springframework.boot:spring-boot-starter-cache"

  implementation "io.dropwizard.metrics:metrics-core"
  implementation "io.micrometer:micrometer-registry-prometheus"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
  implementation "com.fasterxml.jackson.core:jackson-annotations"
  implementation "com.fasterxml.jackson.core:jackson-databind"
  implementation "com.fasterxml.jackson.module:jackson-module-afterburner"
  implementation "org.springframework.boot:spring-boot-starter-data-redis"
  implementation "javax.cache:cache-api"
  implementation "com.zaxxer:HikariCP"
  implementation "org.apache.commons:commons-lang3"
  implementation "commons-io:commons-io"
  implementation "javax.transaction:javax.transaction-api"
  implementation("com.baomidou:mybatis-plus-boot-starter:${mybatisplus_version}"){
    exclude module: 'dynamic-datasource-spring-boot-starter'
  }
  implementation "commons-beanutils:commons-beanutils:1.9.3"
  implementation "org.mybatis:mybatis-typehandlers-jsr310:1.0.2"
  implementation "org.springframework.boot:spring-boot-starter-mail"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-amqp"
  implementation "org.springframework.boot:spring-boot-starter-aop"
  implementation "org.springframework.boot:spring-boot-starter-log4j2"
  implementation "org.springframework.boot:spring-boot-starter-security"
  implementation ("org.springframework.boot:spring-boot-starter-web") {
    exclude module: "spring-boot-starter-tomcat"
  }
  implementation "org.springframework.boot:spring-boot-starter-undertow"
  implementation "org.springframework.boot:spring-boot-starter-websocket"
  implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
	compileOnly "org.projectlombok:lombok:${lombok_version}"

  implementation "org.zalando:problem-spring-web"
  implementation "org.springframework.boot:spring-boot-starter-cloud-connectors"
  implementation "org.springframework.security:spring-security-config"
  implementation "org.springframework.security:spring-security-data"
  implementation "org.springframework.security:spring-security-web"
  implementation "org.springframework.security:spring-security-messaging"
  implementation "io.jsonwebtoken:jjwt-api"
  runtimeOnly "io.jsonwebtoken:jjwt-impl"
  runtimeOnly "io.jsonwebtoken:jjwt-jackson"
  implementation ("io.springfox:springfox-swagger2")
  implementation "io.springfox:springfox-bean-validators"
  implementation "mysql:mysql-connector-java"
  implementation "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
  implementation "org.mapstruct:mapstruct-processor:${mapstruct_version}"
  implementation "javax.interceptor:javax.interceptor-api:1.2.2"

  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
  annotationProcessor "org.projectlombok:lombok:${lombok_version}"

  testImplementation "com.jayway.jsonpath:json-path"
  testImplementation ("org.springframework.boot:spring-boot-starter-test") {
    exclude module: "junit"
    exclude group: "com.vaadin.external.google", module: "android-json"
  }
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "org.junit.jupiter:junit-jupiter-engine"
  testImplementation "org.junit.platform:junit-platform-launcher:1.6.1"
  testImplementation "org.assertj:assertj-core"
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.hamcrest:hamcrest-library"
  testImplementation "org.springframework.cloud:spring-cloud-stream-test-support"

  testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
  testCompileOnly "org.projectlombok:lombok:${lombok_version}"
}

repositories {
  mavenLocal()
  maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
  mavenCentral()
  maven { url "http://repo.spring.io/plugins-release" }
  maven { url "https://plugins.gradle.org/m2/" }
  jcenter()
}

task eclilpse(dependsOn: 'eclipseJdt'){
}
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}
publishing {
  publications {
    maven(MavenPublication) {
      //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
      groupId project.group
      artifactId project.name
      version project.version
      //如果是war包填写components.web，如果是jar包填写components.java
      from components.java
      artifact sourcesJar
    }
  }
}

repositories {
  maven {
    url = "快照版本的nexus仓库地址"

    credentials {
        username 'jcwhmn'
        password 'Chuanwei123$'
    }
  }
}
